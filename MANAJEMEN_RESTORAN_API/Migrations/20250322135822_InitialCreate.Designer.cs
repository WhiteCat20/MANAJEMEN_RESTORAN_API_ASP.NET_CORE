// <auto-generated />
using System;
using MANAJEMEN_RESTORAN_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MANAJEMEN_RESTORAN_API.Migrations
{
    [DbContext(typeof(RestoDbContext))]
    [Migration("20250322135822_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MANAJEMEN_RESTORAN_API.Models.Domain.MHCabang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("JumlahLantai")
                        .HasColumnType("integer");

                    b.Property<string>("Kota")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MHCabangs", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            JumlahLantai = 1,
                            Kota = "Surabaya",
                            Name = "CABANG 1"
                        },
                        new
                        {
                            Id = 2,
                            JumlahLantai = 2,
                            Kota = "Sidoarjo",
                            Name = "CABANG 2"
                        },
                        new
                        {
                            Id = 3,
                            JumlahLantai = 1,
                            Kota = "Gresik",
                            Name = "CABANG 3"
                        },
                        new
                        {
                            Id = 4,
                            JumlahLantai = 2,
                            Kota = "Surabaya",
                            Name = "CABANG 4"
                        },
                        new
                        {
                            Id = 5,
                            JumlahLantai = 1,
                            Kota = "Sidoarjo",
                            Name = "CABANG 5"
                        },
                        new
                        {
                            Id = 6,
                            JumlahLantai = 2,
                            Kota = "Gresik",
                            Name = "CABANG 6"
                        },
                        new
                        {
                            Id = 7,
                            JumlahLantai = 1,
                            Kota = "Surabaya",
                            Name = "CABANG 7"
                        },
                        new
                        {
                            Id = 8,
                            JumlahLantai = 2,
                            Kota = "Sidoarjo",
                            Name = "CABANG 8"
                        },
                        new
                        {
                            Id = 9,
                            JumlahLantai = 1,
                            Kota = "Gresik",
                            Name = "CABANG 9"
                        },
                        new
                        {
                            Id = 10,
                            JumlahLantai = 2,
                            Kota = "Surabaya",
                            Name = "CABANG 10"
                        });
                });

            modelBuilder.Entity("MANAJEMEN_RESTORAN_API.Models.Domain.MHCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MHCustomers", "dbo");
                });

            modelBuilder.Entity("MANAJEMEN_RESTORAN_API.Models.Domain.MHFnb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("ColdHotAvailable")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("MHFnbs", "dbo");
                });

            modelBuilder.Entity("MANAJEMEN_RESTORAN_API.Models.Domain.MHService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MHServices", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ServiceName = "order"
                        },
                        new
                        {
                            Id = 2,
                            ServiceName = "call"
                        },
                        new
                        {
                            Id = 3,
                            ServiceName = "pay"
                        },
                        new
                        {
                            Id = 4,
                            ServiceName = "complaint"
                        });
                });

            modelBuilder.Entity("MANAJEMEN_RESTORAN_API.Models.Domain.MHTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<int>("Lantai")
                        .HasColumnType("integer");

                    b.Property<int>("NomorMeja")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<bool>("isReserved")
                        .HasColumnType("boolean");

                    b.Property<int>("mhCabangId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("mhCabangId");

                    b.ToTable("MHTables", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 4,
                            Lantai = 1,
                            NomorMeja = 1,
                            Status = 0,
                            isReserved = false,
                            mhCabangId = 1
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 6,
                            Lantai = 1,
                            NomorMeja = 2,
                            Status = 1,
                            isReserved = false,
                            mhCabangId = 1
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 2,
                            Lantai = 2,
                            NomorMeja = 3,
                            Status = 0,
                            isReserved = false,
                            mhCabangId = 2
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 4,
                            Lantai = 2,
                            NomorMeja = 4,
                            Status = 1,
                            isReserved = false,
                            mhCabangId = 2
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 8,
                            Lantai = 1,
                            NomorMeja = 5,
                            Status = 0,
                            isReserved = false,
                            mhCabangId = 3
                        },
                        new
                        {
                            Id = 6,
                            Capacity = 4,
                            Lantai = 1,
                            NomorMeja = 6,
                            Status = 1,
                            isReserved = false,
                            mhCabangId = 3
                        },
                        new
                        {
                            Id = 7,
                            Capacity = 6,
                            Lantai = 2,
                            NomorMeja = 7,
                            Status = 0,
                            isReserved = false,
                            mhCabangId = 4
                        },
                        new
                        {
                            Id = 8,
                            Capacity = 2,
                            Lantai = 2,
                            NomorMeja = 8,
                            Status = 1,
                            isReserved = false,
                            mhCabangId = 4
                        },
                        new
                        {
                            Id = 9,
                            Capacity = 4,
                            Lantai = 1,
                            NomorMeja = 9,
                            Status = 0,
                            isReserved = false,
                            mhCabangId = 5
                        },
                        new
                        {
                            Id = 10,
                            Capacity = 8,
                            Lantai = 1,
                            NomorMeja = 10,
                            Status = 1,
                            isReserved = false,
                            mhCabangId = 5
                        });
                });

            modelBuilder.Entity("MANAJEMEN_RESTORAN_API.Models.Domain.THCheckin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerPhone")
                        .HasColumnType("text");

                    b.Property<int>("CustomerTotal")
                        .HasColumnType("integer");

                    b.Property<TimeOnly>("Duration")
                        .HasColumnType("time without time zone");

                    b.Property<int>("MHCabangId")
                        .HasColumnType("integer");

                    b.Property<int>("MHTableId")
                        .HasColumnType("integer");

                    b.Property<int>("Tax")
                        .HasColumnType("integer");

                    b.Property<int>("TotalPayment")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MHCabangId");

                    b.HasIndex("MHTableId");

                    b.ToTable("THCheckins", "dbo");
                });

            modelBuilder.Entity("MANAJEMEN_RESTORAN_API.Models.Domain.THReservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CustomerTotal")
                        .HasColumnType("integer");

                    b.Property<int>("DownPayment")
                        .HasColumnType("integer");

                    b.Property<int>("MHCabangId")
                        .HasColumnType("integer");

                    b.Property<int>("MHTableId")
                        .HasColumnType("integer");

                    b.Property<TimeOnly>("ReservationDuration")
                        .HasColumnType("time without time zone");

                    b.Property<DateTime>("ReservationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("isFinished")
                        .HasColumnType("boolean");

                    b.Property<string>("note")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MHCabangId");

                    b.HasIndex("MHTableId");

                    b.ToTable("THReservations", "dbo");
                });

            modelBuilder.Entity("MANAJEMEN_RESTORAN_API.Models.Domain.MHTable", b =>
                {
                    b.HasOne("MANAJEMEN_RESTORAN_API.Models.Domain.MHCabang", "MHCabang")
                        .WithMany("MHTables")
                        .HasForeignKey("mhCabangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MHCabang");
                });

            modelBuilder.Entity("MANAJEMEN_RESTORAN_API.Models.Domain.THCheckin", b =>
                {
                    b.HasOne("MANAJEMEN_RESTORAN_API.Models.Domain.MHCabang", "MHCabang")
                        .WithMany("THCheckins")
                        .HasForeignKey("MHCabangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MANAJEMEN_RESTORAN_API.Models.Domain.MHTable", "MHTable")
                        .WithMany("THCheckins")
                        .HasForeignKey("MHTableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MHCabang");

                    b.Navigation("MHTable");
                });

            modelBuilder.Entity("MANAJEMEN_RESTORAN_API.Models.Domain.THReservation", b =>
                {
                    b.HasOne("MANAJEMEN_RESTORAN_API.Models.Domain.MHCabang", "MHCabang")
                        .WithMany("THReservations")
                        .HasForeignKey("MHCabangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MANAJEMEN_RESTORAN_API.Models.Domain.MHTable", "MHTable")
                        .WithMany("THReservations")
                        .HasForeignKey("MHTableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MHCabang");

                    b.Navigation("MHTable");
                });

            modelBuilder.Entity("MANAJEMEN_RESTORAN_API.Models.Domain.MHCabang", b =>
                {
                    b.Navigation("MHTables");

                    b.Navigation("THCheckins");

                    b.Navigation("THReservations");
                });

            modelBuilder.Entity("MANAJEMEN_RESTORAN_API.Models.Domain.MHTable", b =>
                {
                    b.Navigation("THCheckins");

                    b.Navigation("THReservations");
                });
#pragma warning restore 612, 618
        }
    }
}
